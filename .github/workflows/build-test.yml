name: Build & Test MokkyBuddy Plugin

on:
  pull_request:
    branches: ["main"]
  push:
    branches:
      - 'dependabot/**'
      - 'features/**'
      - 'feature/**'

jobs:
  checkout-repos:
    runs-on: ubuntu-latest
    outputs:
      java_version_clean: ${{ steps.get_java_version_clean.outputs.java_version_clean }}
      final_plugin_version: ${{ steps.set_final_version.outputs.final_plugin_version }}
    steps:
      - name: Checkout Plugin Repo
        uses: actions/checkout@v3
        with:
          repository: stapeDev/it.stapedev.vscode.mokkybuddy
          token: ${{ secrets.GITHUB_TOKEN }}
          path: plugin

      - name: Checkout Java App Repo
        uses: actions/checkout@v3
        with:
          repository: stapeDev/it.stapedev.api.mokkybuddy
          ref: main
          token: ${{ secrets.JAVA_APP_PAT }}
          path: app

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Get Java App version
        id: get_java_version_clean
        run: |
          VERSION=$(mvn -f app/pom.xml help:evaluate -Dexpression=project.version -q -DforceStdout)
          VERSION_CLEAN=${VERSION/-SNAPSHOT/}
          echo "java_version_clean=$VERSION_CLEAN" >> $GITHUB_OUTPUT

      - name: Check Marketplace & set final plugin version
        id: set_final_version
        working-directory: plugin
        run: |
          JAVA_VERSION=${{ steps.get_java_version_clean.outputs.java_version_clean }}
          CURRENT_VERSION=$(jq -r '.version' package.json)

          # Controllo sul Marketplace
          EXISTS=$(npx vsce show StapeDev.mokky-buddy-api-runner@$JAVA_VERSION --json || echo "{}")
          
          if [[ $EXISTS != "{}" ]]; then
            echo "Version $JAVA_VERSION already exists on Marketplace, bumping patch"
            FINAL_VERSION=$(npm version patch --no-git-tag-version)
          else
            npm version $JAVA_VERSION --no-git-tag-version
            FINAL_VERSION=$JAVA_VERSION
          fi

          # Aggiorna vss-extension.json
          jq --arg v "$FINAL_VERSION" '.version=$v' vss-extension.json > vss-extension.tmp.json
          mv vss-extension.tmp.json vss-extension.json

          echo "final_plugin_version=$FINAL_VERSION" >> $GITHUB_OUTPUT

  prepare-java-jar:
    runs-on: ubuntu-latest
    needs: checkout-repos
    steps:
      - name: Download JAR from Java App release
        run: |
          VERSION=${{ needs.checkout-repos.outputs.final_plugin_version }}
          curl -L -o plugin/resources/mokkyBuddyAPI.jar \
            https://github.com/stapeDev/it.stapedev.api.mokkybuddy/releases/download/v${VERSION}/mokkyBuddyAPI-${VERSION}.jar

  commit-plugin-version:
    runs-on: ubuntu-latest
    needs: prepare-java-jar
    steps:
      - name: Commit version bump and JAR
        working-directory: plugin
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          git add package.json vss-extension.json resources/mokkyBuddyAPI.jar
          if ! git diff --cached --quiet; then
            git commit -m "Update plugin version and JAR [skip ci]"
            
            CURRENT_BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF##*/}}
            git fetch origin $CURRENT_BRANCH
            git rebase origin/$CURRENT_BRANCH
            git push origin $CURRENT_BRANCH --force-with-lease
          else
            echo "No changes to commit"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-docs:
    runs-on: ubuntu-latest
    needs: commit-plugin-version
    steps:
      - name: Generate CHANGELOG and FEATURES
        working-directory: plugin
        run: |
          VERSION=$(jq -r '.version' package.json)

          # Update README badge
          sed -i "s/badge\/version-[0-9]\+\.[0-9]\+\.[0-9]\+/badge\/version-$VERSION/" README.md

          # Generate CHANGELOG from Java repo
          cd ../app
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          RANGE="${LAST_TAG}..HEAD"
          FEATS=$(git log $RANGE --grep '^feat' --pretty=format:"- %s (%an)" --reverse)
          FIXES=$(git log $RANGE --grep '^fix' --pretty=format:"- %s (%an)" --reverse)

          cd ../plugin
          echo "## Version $VERSION ($(date +'%Y-%m-%d'))" >> CHANGELOG.md
          [ -n "$FEATS" ] && echo -e "\n### Features\n$FEATS" >> CHANGELOG.md
          [ -n "$FIXES" ] && echo -e "\n### Fixes\n$FIXES" >> CHANGELOG.md

          echo "## Version $VERSION ($(date +'%Y-%m-%d'))" >> FEATURES.md
          [ -n "$FEATS" ] && echo "$FEATS" >> FEATURES.md

          # Commit docs
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add README.md CHANGELOG.md FEATURES.md
          if ! git diff --cached --quiet; then
            git commit -m "Update README, CHANGELOG, FEATURES [skip ci]"
            CURRENT_BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF##*/}}
            git fetch origin $CURRENT_BRANCH
            git rebase origin/$CURRENT_BRANCH
            git push origin $CURRENT_BRANCH --force-with-lease
          else
            echo "No changes to commit"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-plugin:
    runs-on: ubuntu-latest
    needs: update-docs
    steps:
      - name: Install dependencies
        working-directory: plugin
        run: npm install

      - name: Run tests
        working-directory: plugin
        run: npm test

  build-plugin:
    runs-on: ubuntu-latest
    needs: test-plugin
    steps:
      - name: Build VSCode Plugin
        working-directory: plugin
        run: npx vsce package

      - name: Upload plugin artifact
        uses: actions/upload-artifact@v4
        with:
          name: mokkybuddy-plugin
          path: plugin/*.vsix
