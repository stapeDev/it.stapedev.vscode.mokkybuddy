name: Build & Version MokkyBuddy VSCode Plugin

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-version:
    runs-on: ubuntu-latest
    outputs:
      java_version_clean: ${{ steps.get_java_version_clean.outputs.java_version_clean }}
    steps:
      - name: Checkout Plugin Repo
        uses: actions/checkout@v3
        with:
          repository: stapeDev/it.stapedev.vscode.mokkybuddy
          token: ${{ secrets.GITHUB_TOKEN }}
          path: plugin

      - name: Checkout Java App Repo
        uses: actions/checkout@v3
        with:
          repository: stapeDev/it.stapedev.api.mokkybuddy
          ref: main
          token: ${{ secrets.JAVA_APP_PAT }}
          path: app

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Get Java App version
        id: get_java_version_clean
        run: |
          VERSION=$(mvn -f app/pom.xml help:evaluate -Dexpression=project.version -q -DforceStdout)
          VERSION_CLEAN=${VERSION/-SNAPSHOT/}
          echo "java_version_clean=$VERSION_CLEAN" >> $GITHUB_OUTPUT

      - name: Download JAR artifact from Java App release
        run: |
          VERSION=${{ steps.get_java_version_clean.outputs.java_version_clean }}
          curl -L -o plugin/resources/mokkyBuddyAPI.jar \
            https://github.com/stapeDev/it.stapedev.api.mokkybuddy/releases/download/v${VERSION}/mokkyBuddyAPI-${VERSION}.jar

      - name: Install dependencies
        working-directory: plugin
        run: npm install

      - name: Run tests
        working-directory: plugin
        run: npm test

      - name: Update plugin version and package files
        working-directory: plugin
        run: |
          JAVA_VERSION=${{ steps.get_java_version_clean.outputs.java_version_clean }}
          npm version $JAVA_VERSION --no-git-tag-version
          jq --arg v "$JAVA_VERSION" '.version=$v' vss-extension.json > vss-extension.tmp.json
          mv vss-extension.tmp.json vss-extension.json

      - name: Update README, CHANGELOG, FEATURES
        working-directory: plugin
        run: |
          VERSION=$(jq -r '.version' package.json)
          sed -i "s/badge\/version-[0-9]\+\.[0-9]\+\.[0-9]\+/badge\/version-$VERSION/" README.md

          # Generazione CHANGELOG e FEATURES dalla repo Java
          cd ../app
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          RANGE=${LAST_TAG:-HEAD}..HEAD
          FEATS=$(git log $RANGE --grep '^feat' --pretty=format:"- %s (%an)" --reverse)
          FIXES=$(git log $RANGE --grep '^fix' --pretty=format:"- %s (%an)" --reverse)
          CHORES=$(git log $RANGE --grep '^chore' --pretty=format:"- %s (%an)" --reverse)
          BREAKING=$(git log $RANGE --grep 'BREAKING CHANGE' --pretty=format:"- %s (%an)" --reverse)
          cd ../plugin

          echo "## Version $VERSION ($(date +'%Y-%m-%d'))" >> CHANGELOG.md
          [ -n "$FEATS" ] && echo -e "\n### Features\n$FEATS" >> CHANGELOG.md
          [ -n "$FIXES" ] && echo -e "\n### Fixes\n$FIXES" >> CHANGELOG.md
          [ -n "$CHORES" ] && echo -e "\n### Chores\n$CHORES" >> CHANGELOG.md
          [ -n "$BREAKING" ] && echo -e "\n### BREAKING CHANGES\n$BREAKING" >> CHANGELOG.md

      - name: Commit version and docs updates
        working-directory: plugin
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add -A
          if ! git diff --cached --quiet; then
            git commit -m "Update plugin version, docs, resources [skip ci]"
            git push origin main --force-with-lease
          fi

      - name: Build VSCode Plugin
        working-directory: plugin
        run: npx vsce package

      - name: Upload plugin artifact
        uses: actions/upload-artifact@v4
        with:
          name: plugin-final
          path: plugin
