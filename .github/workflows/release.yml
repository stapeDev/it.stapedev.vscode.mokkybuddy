name: Release MokkyBuddy VSCode Plugin
permissions:
  contents: write
  pull-requests: write

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      # --- Checkout plugin ---
      - uses: actions/checkout@v3
        with:
          path: plugin
          fetch-depth: 0

      # --- Configura git ---
      - name: Setup Git
        run: |
          cd plugin
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      # --- Calcola versione dal package.json ---
      - name: Get release version
        id: get_version
        run: |
          cd plugin
          RELEASE_VERSION=$(jq -r '.version' package.json)
          echo "Release version: $RELEASE_VERSION"
          echo "release_version=$RELEASE_VERSION" >> $GITHUB_OUTPUT

      - name: Create release branch
        run: |
          cd plugin
          RELEASE_VERSION=${{ steps.get_version.outputs.release_version }}

          # Estrai major e minor
          IFS='.' read -r MAJOR MINOR PATCH <<< "$RELEASE_VERSION"
          RELEASE_BRANCH="release/$MAJOR.$MINOR.X"

          if git rev-parse --verify $RELEASE_BRANCH >/dev/null 2>&1; then
            echo "Branch $RELEASE_BRANCH already exists. Skipping creation."
          else
            echo "Creating branch $RELEASE_BRANCH"
            git checkout -b $RELEASE_BRANCH
            git push origin $RELEASE_BRANCH
          fi

      # --- Crea tag stabile ---
      - name: Tag release
        run: |
          cd plugin
          RELEASE_VERSION=${{ steps.get_version.outputs.release_version }}
          git tag -a "v$RELEASE_VERSION" -m "Release $RELEASE_VERSION"
          git push origin "v$RELEASE_VERSION"
      
      # --- Install Node dependencies ---
      - name: Install Node dependencies
        run: |
          cd plugin
          npm ci
      
      # --- Publish su Marketplace ---
      - name: Publish stable release
        run: |
          cd plugin
          npx @vscode/vsce publish
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
