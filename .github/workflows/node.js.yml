name: Build MokkyBuddy VSCode Plugin

on:
  push:
    branches:
      - main
  repository_dispatch:
    types: [trigger-plugin-build]
  workflow_run:
    workflows: ["Mokky Buddy CI/CD"]
    types:
      - completed

jobs:
  checkout:
    runs-on: ubuntu-latest
    outputs:
      java_version: ${{ steps.get_java_version.outputs.version }}
    steps:
      - name: Checkout Plugin Repo
        uses: actions/checkout@v3
        with:
          repository: stapeDev/it.stapedev.vscode.mokkybuddy
          token: ${{ secrets.GITHUB_TOKEN }}
          path: plugin
          fetch-depth: 0   # necessario per git log completo

      - name: Checkout Java App Repo
        uses: actions/checkout@v3
        with:
          repository: stapeDev/it.stapedev.api.mokkybuddy
          ref: main
          token: ${{ secrets.JAVA_APP_PAT }}
          path: app

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Get Java App version
        id: get_java_version
        run: |
          VERSION=$(mvn -f app/pom.xml help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Upload plugin directory
        uses: actions/upload-artifact@v4
        with:
          name: plugin-files
          path: plugin

  prepare-jar:
    runs-on: ubuntu-latest
    needs: checkout
    outputs:
      jar_file: ${{ steps.set_fixed_name.outputs.jar_file }}
    steps:
      - name: Download plugin directory
        uses: actions/download-artifact@v4
        with:
          name: plugin-files
          path: plugin

      - name: Download JAR from Java App Release
        id: download_jar
        run: |
          VERSION=${{ needs.checkout.outputs.java_version }}
          curl -L -o plugin/resources/mokkyBuddyAPI-$VERSION.jar \
            https://github.com/stapeDev/it.stapedev.api.mokkybuddy/releases/download/v${VERSION}/mokkyBuddyAPI-${VERSION}.jar

      - name: Copy Jar to fixed name
        id: set_fixed_name
        run: |
          VERSION=${{ needs.checkout.outputs.java_version }}
          cp plugin/resources/mokkyBuddyAPI-$VERSION.jar plugin/resources/mokkyBuddyAPI.jar
          echo "jar_file=plugin/resources/mokkyBuddyAPI.jar" >> $GITHUB_OUTPUT

      - name: Upload updated plugin directory
        uses: actions/upload-artifact@v4
        with:
          name: plugin-files-updated
          path: plugin

  bump-version:
    runs-on: ubuntu-latest
    needs: prepare-jar
    steps:
      - name: Checkout Plugin Repo
        uses: actions/checkout@v3
        with:
          repository: stapeDev/it.stapedev.vscode.mokkybuddy
          token: ${{ secrets.GITHUB_TOKEN }}
          path: plugin
          fetch-depth: 0  # assicura tutta la cronologia

      - name: Reset working directory
        working-directory: plugin
        run: |
          git fetch origin main
          git reset --hard origin/main

      - name: Download updated plugin directory
        uses: actions/download-artifact@v4
        with:
          name: plugin-files-updated
          path: tmp_plugin

      - name: Copy files into checked-out repo
        run: cp -R tmp_plugin/* plugin/

      - name: Determine version bump
        id: version_bump
        working-directory: plugin
        run: |
          # Usa il commit del push corrente dal payload GitHub
          LAST_COMMIT="${{ github.event.head_commit.message }}"
          CURRENT_VERSION=$(jq -r '.version' package.json)
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"

          NEW_BRANCH=""

          if [[ "$LAST_COMMIT" == *"BREAKING CHANGE"* ]]; then
            MAJOR=$((MAJOR+1))
            MINOR=0
            PATCH=0
            NEW_BRANCH="versions/${MAJOR}.${MINOR}.X"
          elif [[ "$LAST_COMMIT" == feat:* ]]; then
            MINOR=$((MINOR+1))
            PATCH=0
            NEW_BRANCH="versions/${MAJOR}.${MINOR}.X"
          else
            PATCH=$((PATCH+1))
            NEW_BRANCH="versions/${MAJOR}.${MINOR}.X"
          fi

          # Controlla se la versione esiste giÃ  e aumenta il patch se necessario
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          while npx vsce show StapeDev.mokky-buddy-api-runner@$NEW_VERSION --json >/dev/null 2>&1; do
            PATCH=$((PATCH+1))
            NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          done

          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "branch=$NEW_BRANCH" >> $GITHUB_OUTPUT

          # Aggiorna file
          jq --arg v "$NEW_VERSION" '.version=$v' vss-extension.json > vss-extension.tmp.json
          mv vss-extension.tmp.json vss-extension.json
          echo $NEW_VERSION > VERSION

      - name: Commit and push version on main
        working-directory: plugin
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add package.json vss-extension.json VERSION resources/mokkyBuddyAPI.jar
          git commit -m "Update plugin version to ${{ steps.version_bump.outputs.new_version }} [skip ci]" || echo "No changes to commit"
          git push origin main --force-with-lease
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create or update release branch
        if: ${{ steps.version_bump.outputs.branch != '' }}
        working-directory: plugin
        run: |
          git fetch origin
          git checkout -B ${{ steps.version_bump.outputs.branch }} main
          git push origin ${{ steps.version_bump.outputs.branch }} --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload plugin directory after version bump
        uses: actions/upload-artifact@v4
        with:
          name: plugin-versioned
          path: plugin

  build-plugin:
    runs-on: ubuntu-latest
    needs: bump-version
    steps:
      - name: Download final plugin directory
        uses: actions/download-artifact@v4
        with:
          name: plugin-files-updated
          path: plugin

      - name: Build VSCode Plugin
        working-directory: plugin
        run: |
          npm install
          npx vsce package

      - name: Upload Plugin Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mokkybuddy-vscode-plugin
          path: plugin/*.vsix

  publish:
    runs-on: ubuntu-latest
    needs: build-plugin
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download final plugin directory
        uses: actions/download-artifact@v4
        with:
          name: plugin-files-updated
          path: plugin

      - name: Install TypeScript types
        working-directory: plugin
        run: npm install --save-dev @types/node @types/mocha

      - name: Publish VSCode Plugin
        working-directory: plugin
        run: npx @vscode/vsce publish
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
