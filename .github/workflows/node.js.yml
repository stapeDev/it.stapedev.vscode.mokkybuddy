name: Build MokkyBuddy VSCode Plugin

on:
  push:
    branches:
      - main
  repository_dispatch:
    types: [trigger-plugin-build]
  workflow_run:
    workflows: ["Mokky Buddy CI/CD"]
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout Plugin
      - name: Checkout Plugin Repo
        uses: actions/checkout@v3
        with:
          repository: stapeDev/it.stapedev.vscode.mokkybuddy
          token: ${{ secrets.GITHUB_TOKEN }}
          path: plugin

      # Checkout Java App
      - name: Checkout Java App Repo
        uses: actions/checkout@v3
        with:
          repository: stapeDev/it.stapedev.api.mokkybuddy
          ref: main
          token: ${{ secrets.JAVA_APP_PAT }}
          path: app

      # Setup Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Recupera versione dal POM
      - name: Get Java App version
        id: java_version
        run: |
          VERSION=$(mvn -f app/pom.xml help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # Download JAR dalla release della Java App
      - name: Download JAR from Java App Release
        run: |
          VERSION=${{ steps.java_version.outputs.version }}
          echo "Downloading MokkyBuddyAPI-$VERSION.jar from release"
          curl -L -o plugin/resources/mokkyBuddyAPI-$VERSION.jar \
            https://github.com/stapeDev/it.stapedev.api.mokkybuddy/releases/download/v${VERSION}/mokkyBuddyAPI-${VERSION}.jar

      # Copia JAR con nome fisso
      - name: Copy Jar to fixed name
        run: |
          VERSION=${{ steps.java_version.outputs.version }}
          cp plugin/resources/mokkyBuddyAPI-$VERSION.jar plugin/resources/mokkyBuddyAPI.jar

      # Controlla se la versione è già pubblicata
      - name: Check if version exists on Marketplace
        id: version_check
        working-directory: plugin
        run: |
          VERSION=${{ steps.java_version.outputs.version }}
          EXISTS=$(npx vsce show StapeDev.mokky-buddy-api-runner@$VERSION --json || echo "{}")
          if [[ $EXISTS != "{}" ]]; then
            echo "Version exists"
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "Version not published"
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      # Imposta versione plugin e aggiorna vss-extension.json
      - name: Set plugin version
        working-directory: plugin
        run: |
          JAVA_VERSION=${{ steps.java_version.outputs.version }}
          CURRENT_VERSION=$(jq -r '.version' package.json)
          echo "Current package.json version: $CURRENT_VERSION"
          if [ "${{ steps.version_check.outputs.exists }}" == "true" ]; then
            echo "Version already exists, incrementing patch"
            NEW_VERSION=$(npm version patch --no-git-tag-version)
          else
            echo "Using Java App version $JAVA_VERSION"
            npm version $JAVA_VERSION --no-git-tag-version
            NEW_VERSION=$JAVA_VERSION
          fi
          # Aggiorna anche vss-extension.json
          jq --arg v "$NEW_VERSION" '.version=$v' vss-extension.json > vss-extension.tmp.json
          mv vss-extension.tmp.json vss-extension.json

      # Commit e push se ci sono modifiche
      - name: Commit and push version bump
        working-directory: plugin
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add package.json vss-extension.json resources/mokkyBuddyAPI.jar
          if ! git diff --cached --quiet; then
            git commit -m "Update plugin version and jar [skip ci]"
            git push
          else
            echo "No changes to commit"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Build VSCode Plugin
      - name: Build VSCode Plugin
        working-directory: plugin
        run: |
          npm install
          npx vsce package

      # Upload artifact
      - name: Upload Plugin Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mokkybuddy-vscode-plugin
          path: plugin/*.vsix

      # Publish su Marketplace
      - name: Publish VSCode Plugin
        if: github.ref == 'refs/heads/main'
        working-directory: plugin
        run: npx vsce publish
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
